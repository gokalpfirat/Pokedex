{"version":3,"sources":["config/constants.js","components/PokemonType/index.js","utils/string.js","containers/FavouriteButton/index.js","utils/number.js","api/index.js","components/CardList/index.js","context/AppContext/index.js","components/LoadingCircle/index.js","containers/Card/index.js","containers/ModalProvider/index.js","containers/InfiniteScroll/index.js","components/Logo/index.js","components/SearchInput/index.js","components/LoadMore/index.js","components/Button/index.js","components/InformationBox/index.js","containers/FavouriteDetails/index.js","containers/App/index.js","containers/ContextProvider/index.js","containers/ErrorBoundary/index.js","index.js"],"names":["BASE_URL","POKEMON_PER_PAGE","pokemonTypeColors","grass","normal","fire","water","electric","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","PokemonType","typeName","this","props","className","PureComponent","escapeName","name","split","map","word","charAt","toUpperCase","slice","join","FavouriteButton","clickFn","e","stopPropagation","clickHandler","isFavourite","style","resultImg","alt","src","onMouseEnter","mouseEnter","onMouseLeave","mouseLeave","onClick","leftFillNum","num","targetLength","toString","padStart","getPokemonList","a","limit","page","fetch","response","json","pokemons","results","count","getPokemonDataFromName","result","CardList","children","AppContext","createContext","loadedPokemons","loadedPokemonData","favouritePokemons","loadedPageNum","totalPokemons","addLoadedPokemons","increasePageNum","addToLoadedPokemonData","toggleFavourites","removeFavourites","LoadingCircle","loadingState","width","height","Card","loadPokemonData","entries","state","pokemonData","pokemonName","forEach","entry","isIntersecting","pokemonCacheData","context","setState","cardRef","createRef","observer","IntersectionObserver","root","rootMargin","threshold","observe","current","disconnect","typeColor","types","type","background","ref","cursor","onClickHandler","loading","sprites","front_default","textAlign","id","data","contextType","ModalProvider","onOutsideClick","onCloseButtonClick","onModalClick","document","body","overflow","ReactDOM","createPortal","Component","InfiniteScroll","cb","callback","loadRef","Logo","SearchInput","placeholder","onChange","value","target","LoadMore","loadedCount","totalCount","loadMore","isLoading","disabled","Button","InformationBox","FavouriteDetails","getPokemonType","pokemonTypes","pokemon","length","Object","keys","AsyncPokemonModal","lazy","App","infiniteScrollLoading","searchValue","listType","loadMorePokemonsToCache","showModal","isModalVisible","selectedPokemonData","closeModal","switchMode","onSearchInputChange","setTotalPokemonCount","pageNum","filteredList","filter","toLowerCase","includes","pokemonCards","controls","window","location","href","fallback","favouriteFn","ContextProvider","prevState","concat","assign","index","indexOf","cloneFavourites","splice","Provider","ErrorBoundary","hasError","error","errorInfo","console","log","rootElement","getElementById","render"],"mappings":"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","file":"static/js/main.89cef699.chunk.js","sourcesContent":["export const BASE_URL = \"https://pokeapi.co/api/v2\";\r\n\r\nexport const POKEMON_PER_PAGE = 40;\r\n\r\nexport const pokemonTypeColors = {\r\n  grass: \"#7AC74C\",\r\n  normal: \"#A8A77A\",\r\n  fire: \"#EE8130\",\r\n  water: \"#6390F0\",\r\n  electric: \"#F7D02C\",\r\n  ice: \"#96D9D6\",\r\n  fighting: \"#C22E28\",\r\n  poison: \"#A33EA1\",\r\n  ground: \"#E2BF65\",\r\n  flying: \"#A98FF3\",\r\n  psychic: \"#F95587\",\r\n  bug: \"#A6B91A\",\r\n  rock: \"#B6A136\",\r\n  ghost: \"#735797\",\r\n  dragon: \"#6F35FC\",\r\n  dark: \"#705746\",\r\n  steel: \"#B7B7CE\",\r\n  fairy: \"#D685AD\"\r\n};\r\n","import { PureComponent } from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass PokemonType extends PureComponent {\r\n  render() {\r\n    const { typeName } = this.props;\r\n    return (\r\n      <div className={`pokemon_type pokemon_type--${typeName}`}>{typeName}</div>\r\n    );\r\n  }\r\n}\r\nexport default PokemonType;\r\n","/**\r\n * This function escape the dashes and capitalize first letter of given move name\r\n * @param {string} name\r\n * @returns {string}\r\n */\r\nexport const escapeName = (name) => {\r\n  return name\r\n    .split(\"-\")\r\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(\" \");\r\n};\r\n","import { PureComponent } from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass FavouriteButton extends PureComponent {\r\n  clickFn = (e) => {\r\n    e.stopPropagation();\r\n    this.props.clickHandler();\r\n  };\r\n\r\n  render() {\r\n    const { dark, isFavourite, style, className } = this.props;\r\n    const resultImg = isFavourite ? \"full_hearth\" : \"hearth\";\r\n    return (\r\n      <img\r\n        style={style}\r\n        alt=\"Hearth Icon\"\r\n        src={`assets/${dark ? \"dark\" : \"white\"}/${resultImg}.svg`}\r\n        className={`favourite ${className} ${\r\n          resultImg === \"full_hearth\"\r\n            ? \"favourite--active\"\r\n            : \"favourite--disabled\"\r\n        }`}\r\n        onMouseEnter={this.mouseEnter}\r\n        onMouseLeave={this.mouseLeave}\r\n        onClick={(e) => this.clickFn(e)}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default FavouriteButton;\r\n","/**\r\n * Fill number's beginning with zero to make it at target's length\r\n * @param {number} num\r\n * @param {number} targetLength\r\n * @returns {string}\r\n */\r\nexport function leftFillNum(num, targetLength) {\r\n  return num.toString().padStart(targetLength, 0);\r\n}\r\n","import { BASE_URL } from \"../config/constants\";\r\n\r\n/**\r\n * Get Pokemon List & Count\r\n * @param {number} [limit]\r\n * @param {number} [offset]\r\n * @returns {Object[]}\r\n */\r\nexport const getPokemonList = async (limit = 40, page = 0) => {\r\n  const response = await fetch(\r\n    `${BASE_URL}/pokemon?limit=${limit}&offset=${page * limit}`\r\n  );\r\n  const { results: pokemons, count } = await response.json();\r\n  return { pokemons, count };\r\n};\r\n\r\n/**\r\n * Get Pokemon Types\r\n * @returns {Object[]}\r\n */\r\nexport const getPokemonTypes = async () => {\r\n  const response = await fetch(`${BASE_URL}/type`);\r\n  const { results: types } = await response.json();\r\n  return types;\r\n};\r\n\r\n/**\r\n * Get Pokemon Data using name\r\n * @param {string} name\r\n * @returns {Object}\r\n */\r\nexport const getPokemonDataFromName = async (name) => {\r\n  if (!name) return;\r\n  const response = await fetch(`${BASE_URL}/pokemon/${name}`);\r\n  const result = await response.json();\r\n  return result;\r\n};\r\n","import \"./style.css\";\r\n\r\nconst CardList = ({ children }) => <div className=\"card_list\">{children}</div>;\r\nexport default CardList;\r\n","import { createContext } from \"react\";\r\n\r\nconst AppContext = createContext({\r\n  loadedPokemons: [],\r\n  loadedPokemonData: {},\r\n  favouritePokemons: [],\r\n  loadedPageNum: 0,\r\n  totalPokemons: 0,\r\n  addLoadedPokemons: () => {},\r\n  increasePageNum: () => {},\r\n  addToLoadedPokemonData: () => {},\r\n  toggleFavourites: () => {},\r\n  removeFavourites: () => {}\r\n});\r\n\r\nexport default AppContext;\r\n","export const LoadingCircle = ({\r\n  loadingState = true,\r\n  width = 100,\r\n  height = 100\r\n}) =>\r\n  loadingState ? (\r\n    <img\r\n      src=\"https://i.stack.imgur.com/kOnzy.gif\"\r\n      alt=\"Loading\"\r\n      width={width}\r\n      height={height}\r\n    />\r\n  ) : (\r\n    \"\"\r\n  );\r\nexport default LoadingCircle;\r\n","import { PureComponent, createRef } from \"react\";\r\nimport { getPokemonDataFromName } from \"../../api\";\r\nimport PokemonType from \"../../components/PokemonType\";\r\nimport FavouriteButton from \"../FavouriteButton\";\r\nimport { pokemonTypeColors } from \"../../config/constants\";\r\nimport { leftFillNum } from \"../../utils/number\";\r\nimport { escapeName } from \"../../utils/string\";\r\nimport AppContext from \"../../context/AppContext\";\r\nimport LoadingCircle from \"../../components/LoadingCircle\";\r\nimport \"./style.css\";\r\n\r\nclass Card extends PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      pokemonData: null\r\n    };\r\n    this.cardRef = createRef();\r\n  }\r\n  static contextType = AppContext;\r\n\r\n  // If it's near viewport load pokemon data & show Ghost loader until it fetches\r\n  loadPokemonData = (entries) => {\r\n    if (!this.state.pokemonData) {\r\n      const { pokemonName } = this.props;\r\n      entries.forEach(async (entry) => {\r\n        if (entry.isIntersecting) {\r\n          const pokemonCacheData = this.context.loadedPokemonData[pokemonName];\r\n          if (pokemonCacheData) {\r\n            this.setState({ pokemonData: pokemonCacheData });\r\n          } else {\r\n            const pokemonData = await getPokemonDataFromName(\r\n              this.props.pokemonName\r\n            );\r\n            this.context.addToLoadedPokemonData(\r\n              this.props.pokemonName,\r\n              pokemonData\r\n            );\r\n            this.setState({ pokemonData });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleFavourites = () => {\r\n    const { pokemonName } = this.props;\r\n    this.context.toggleFavourites(pokemonName);\r\n  };\r\n  componentDidMount() {\r\n    const options = {\r\n      root: null,\r\n      rootMargin: \"200px\",\r\n      threshold: 0.2\r\n    };\r\n\r\n    this.observer = new IntersectionObserver(this.loadPokemonData, options);\r\n    this.observer.observe(this.cardRef.current);\r\n  }\r\n  componentWillUnmount() {\r\n    this.observer.disconnect();\r\n  }\r\n  render() {\r\n    const { pokemonName, isFavourite } = this.props;\r\n    const { pokemonData } = this.state;\r\n    const typeColor = pokemonData\r\n      ? pokemonTypeColors[pokemonData.types[0]?.type?.name] ||\r\n        pokemonTypeColors.normal\r\n      : \"#000\";\r\n\r\n    // Gradient style depending on pokemon's main type\r\n    const style = {\r\n      background: `linear-gradient(180deg,rgba(255, 255, 255, 0) 0%,${typeColor} 100%)`\r\n    };\r\n    return (\r\n      <div\r\n        ref={this.cardRef}\r\n        className={`card grow ${!pokemonData ? \"card--inactive\" : \"\"}`}\r\n        style={{ cursor: pokemonData ? \"pointer\" : \"wait\" }}\r\n        onClick={() => this.props.onClickHandler(pokemonData)}\r\n      >\r\n        <div className=\"card__overlay\" style={style}>\r\n          {pokemonData ? (\r\n            <img\r\n              loading=\"lazy\"\r\n              className=\"card__image\"\r\n              src={pokemonData ? pokemonData.sprites?.front_default : \"\"}\r\n              alt={\"\"}\r\n            />\r\n          ) : (\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <LoadingCircle width=\"96\" height=\"96\" />\r\n            </div>\r\n          )}\r\n          <h3 className=\"card__title\">{escapeName(pokemonName)}</h3>\r\n          <h4 className=\"card__id\">\r\n            #{pokemonData ? leftFillNum(pokemonData.id, 4) : \"\"}\r\n          </h4>\r\n        </div>\r\n        <div className=\"card__content\">\r\n          <div>\r\n            {pokemonData &&\r\n              pokemonData.types.map((data) => (\r\n                <PokemonType key={data.type.name} typeName={data.type.name} />\r\n              ))}\r\n          </div>\r\n          <FavouriteButton\r\n            style={{ height: \"26px\" }}\r\n            isFavourite={isFavourite}\r\n            clickHandler={this.toggleFavourites}\r\n            dark\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Card;\r\n","import { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style.css\";\r\n\r\nclass ModalProvider extends Component {\r\n  componentDidMount() {\r\n    // Body scroll lock active\r\n    document.body.style.overflow = \"hidden\";\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Body scroll lock deactivate\r\n    document.body.style.overflow = \"auto\";\r\n  }\r\n\r\n  onOutsideClick = () => {\r\n    this.props.onOutsideClick();\r\n  };\r\n\r\n  onCloseButtonClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.onCloseButtonClick();\r\n  };\r\n\r\n  onModalClick = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(\r\n      <div className=\"overlay\" onClick={this.onOutsideClick}>\r\n        <div className=\"modal\" onClick={(e) => this.onModalClick(e)}>\r\n          {this.props.children}\r\n        </div>\r\n      </div>,\r\n      document.body\r\n    );\r\n  }\r\n}\r\nexport default ModalProvider;\r\n","import { Component } from \"react\";\r\n\r\nclass InfiniteScroll extends Component {\r\n  cb = (entries) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        this.props.callback();\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    const options = {\r\n      root: null,\r\n      rootMargin: \"600px\",\r\n      threshold: 0\r\n    };\r\n\r\n    const observer = new IntersectionObserver(this.cb, options);\r\n    observer.observe(this.props.loadRef.current);\r\n  }\r\n  render() {\r\n    return <>{this.props.children}</>;\r\n  }\r\n}\r\n\r\nexport default InfiniteScroll;\r\n","import \"./style.css\";\r\n\r\nconst Logo = () => (\r\n  <img\r\n    className=\"logo\"\r\n    alt=\"Pokemon Logo\"\r\n    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/1280px-International_Pok%C3%A9mon_logo.svg.png\"\r\n  />\r\n);\r\nexport default Logo;\r\n","import \"./style.css\";\r\n\r\nconst SearchInput = ({ placeholder, onChange, value }) => (\r\n  <input\r\n    className=\"search_input\"\r\n    placeholder={placeholder}\r\n    value={value}\r\n    onChange={(e) => onChange(e.target.value)}\r\n  />\r\n);\r\nexport default SearchInput;\r\n","import \"./style.css\";\r\n\r\nconst LoadMore = ({ loadedCount, totalCount, loadMore, isLoading }) => {\r\n  return (\r\n    <div className=\"load_more\">\r\n      {totalCount !== loadedCount ? (\r\n        <div>\r\n          Can't find your result from{\" \"}\r\n          <strong>\r\n            {loadedCount}/{totalCount}\r\n          </strong>\r\n          loaded pokemons?\r\n          <button\r\n            className=\"load_more__button\"\r\n            onClick={loadMore}\r\n            disabled={isLoading}\r\n          >\r\n            Load More\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <strong>No more to load, these are all results!</strong>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default LoadMore;\r\n","import \"./style.css\";\r\nconst Button = ({ children, ...props }) => (\r\n  <button className=\"button\" {...props}>\r\n    {children}\r\n  </button>\r\n);\r\nexport default Button;\r\n","import \"./style.css\";\r\nconst InformationBox = ({ children, ...props }) => (\r\n  <div className=\"information_box\" {...props}>\r\n    {children}\r\n  </div>\r\n);\r\nexport default InformationBox;\r\n","import { Component } from \"react\";\r\nimport PokemonType from \"../../components/PokemonType\";\r\nimport AppContext from \"../../context/AppContext\";\r\nimport \"./style.css\";\r\n\r\nclass FavouriteDetails extends Component {\r\n  static contextType = AppContext;\r\n  render() {\r\n    const { favouritePokemons, getPokemonType } = this.context;\r\n    const pokemonTypes = {};\r\n    favouritePokemons.forEach((pokemon) => {\r\n      const type = getPokemonType(pokemon);\r\n      if (pokemonTypes[type]) {\r\n        pokemonTypes[type] += 1;\r\n      } else {\r\n        pokemonTypes[type] = 1;\r\n      }\r\n    });\r\n    return (\r\n      <>\r\n        <h3 className=\"favourite_detail__title\">Favourite Pokémon Details</h3>\r\n        <p className=\"favourite_detail__text\">\r\n          You have total <strong>{favouritePokemons.length}</strong> Pokémon.\r\n        </p>\r\n        {Object.keys(pokemonTypes).map((type) => (\r\n          <div className=\"favourite_detail__type\" key={type}>\r\n            <u>{pokemonTypes[type]}</u>&nbsp;&nbsp;\r\n            <PokemonType typeName={type} />\r\n            Type Pokémon\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default FavouriteDetails;\r\n","import { Component, createRef, Fragment, lazy, Suspense } from \"react\";\r\nimport { getPokemonList } from \"../../api\";\r\nimport { POKEMON_PER_PAGE } from \"../../config/constants\";\r\nimport CardList from \"../../components/CardList\";\r\nimport Card from \"../Card\";\r\nimport ModalProvider from \"../ModalProvider\";\r\nimport InfiniteScroll from \"../InfiniteScroll\";\r\nimport Logo from \"../../components/Logo\";\r\nimport SearchInput from \"../../components/SearchInput\";\r\nimport LoadMore from \"../../components/LoadMore\";\r\nimport AppContext from \"../../context/AppContext\";\r\nimport Button from \"../../components/Button\";\r\nimport LoadingCircle from \"../../components/LoadingCircle\";\r\nimport InformationBox from \"../../components/InformationBox\";\r\nimport FavouriteDetails from \"../FavouriteDetails\";\r\n\r\nimport \"./style.css\";\r\n\r\n// Lazy load Modal, it won't be loaded until needed!\r\nconst AsyncPokemonModal = lazy(() => import(\"../PokemonModal\"));\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      listType: \"all\",\r\n      isModalVisible: false,\r\n      selectedPokemonData: null,\r\n      searchValue: \"\",\r\n      infiniteScrollLoading: false\r\n    };\r\n    // This is used as Intersection Observer element\r\n    this.loadRef = createRef();\r\n  }\r\n\r\n  static contextType = AppContext;\r\n\r\n  // Load Pokemons at Infinity Scroll\r\n  loadMore = async () => {\r\n    if (\r\n      !this.state.infiniteScrollLoading &&\r\n      !this.state.searchValue.length &&\r\n      this.state.listType === \"all\"\r\n    ) {\r\n      this.setState({ infiniteScrollLoading: true });\r\n      const { addLoadedPokemons, loadedPageNum } = this.context;\r\n      const { pokemons } = await getPokemonList(\r\n        POKEMON_PER_PAGE,\r\n        loadedPageNum\r\n      );\r\n      addLoadedPokemons(pokemons, () => {\r\n        this.setState({\r\n          infiniteScrollLoading: false\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // Load Pokemons to cache if search is not found\r\n  loadMorePokemonsToCache = async () => {\r\n    if (!this.state.infiniteScrollLoading) {\r\n      this.setState({ infiniteScrollLoading: true });\r\n      const { addLoadedPokemons, loadedPageNum } = this.context;\r\n      const { pokemons } = await getPokemonList(\r\n        POKEMON_PER_PAGE,\r\n        loadedPageNum\r\n      );\r\n      addLoadedPokemons(pokemons, () => {\r\n        this.setState({\r\n          infiniteScrollLoading: false\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  showModal = (pokemonData) => {\r\n    if (!pokemonData) return;\r\n    this.setState({ isModalVisible: true, selectedPokemonData: pokemonData });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ isModalVisible: false, selectedPokemonData: null });\r\n  };\r\n\r\n  switchMode = () => {\r\n    const { listType } = this.state;\r\n    // Reset Search & Modal Values\r\n    this.setState({ searchValue: \"\" });\r\n    this.setState({ isModalVisible: false, selectedPokemonData: null });\r\n    if (listType === \"all\") {\r\n      this.setState({ listType: \"favourites\" });\r\n    } else {\r\n      this.setState({\r\n        listType: \"all\"\r\n      });\r\n    }\r\n  };\r\n\r\n  onSearchInputChange = (value) => {\r\n    this.setState({ searchValue: value });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      addLoadedPokemons,\r\n      loadedPageNum,\r\n      setTotalPokemonCount\r\n    } = this.context;\r\n    if (loadedPageNum === 0) {\r\n      const { pokemons, count } = await getPokemonList(\r\n        POKEMON_PER_PAGE,\r\n        this.state.pageNum\r\n      );\r\n      setTotalPokemonCount(count);\r\n      addLoadedPokemons(pokemons);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isModalVisible, listType, searchValue } = this.state;\r\n    const {\r\n      loadedPokemons,\r\n      favouritePokemons,\r\n      removeFavourites,\r\n      totalCount\r\n    } = this.context;\r\n\r\n    // Filterin Lists\r\n    const filteredList =\r\n      listType === \"all\"\r\n        ? loadedPokemons.filter((pokemon) => {\r\n            return pokemon.name\r\n              .toLowerCase()\r\n              .includes(searchValue.toLowerCase());\r\n          })\r\n        : favouritePokemons\r\n            .filter((pokemon) => pokemon.includes(searchValue.toLowerCase()))\r\n            .map((pokemon) => ({\r\n              name: pokemon\r\n            }));\r\n\r\n    // Rendering Cards\r\n    const pokemonCards = filteredList.length\r\n      ? filteredList.map((pokemon) => {\r\n          const isFavourite = favouritePokemons.includes(pokemon.name);\r\n          return (\r\n            <Card\r\n              pokemonName={pokemon.name}\r\n              key={pokemon.name}\r\n              onClickHandler={this.showModal}\r\n              isFavourite={isFavourite}\r\n            />\r\n          );\r\n        })\r\n      : \"\";\r\n\r\n    // Rendering Controls\r\n    const controls =\r\n      listType === \"all\" ? (\r\n        <Button onClick={this.switchMode}>My Pokémons</Button>\r\n      ) : (\r\n        <>\r\n          <Button onClick={this.switchMode}>All Pokémons</Button>\r\n          {favouritePokemons.length ? (\r\n            <>\r\n              <Button onClick={removeFavourites}>Remove Favourites</Button>\r\n              <Button\r\n                onClick={() => {\r\n                  window.location.href = \"#favouriteDetails\";\r\n                }}\r\n              >\r\n                Favourite Details\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      );\r\n\r\n    return (\r\n      <div className=\"homepage\">\r\n        <Logo />\r\n        <div className=\"controls\">{controls}</div>\r\n        <SearchInput\r\n          placeholder=\"Enter Pokémon name you want to search\"\r\n          onChange={this.onSearchInputChange}\r\n          value={searchValue}\r\n        />\r\n        {filteredList.length ? (\r\n          <InfiniteScroll loadRef={this.loadRef} callback={this.loadMore}>\r\n            <CardList>{pokemonCards}</CardList>\r\n            {isModalVisible ? (\r\n              <ModalProvider onOutsideClick={this.closeModal}>\r\n                <Suspense fallback={<LoadingCircle />}>\r\n                  <AsyncPokemonModal\r\n                    pokemonData={this.state.selectedPokemonData}\r\n                    onCloseButtonClick={this.closeModal}\r\n                    favouriteFn={this.context.toggleFavourites}\r\n                    isFavourite={this.context.favouritePokemons.includes(\r\n                      this.state.selectedPokemonData.name\r\n                    )}\r\n                  />\r\n                </Suspense>\r\n              </ModalProvider>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {loadedPokemons.length !== totalCount ? (\r\n              <div ref={this.loadRef} style={{ textAlign: \"center\" }}>\r\n                <LoadingCircle\r\n                  loadingState={\r\n                    !this.state.searchValue.length &&\r\n                    this.state.listType === \"all\"\r\n                  }\r\n                />\r\n              </div>\r\n            ) : (\r\n              <InformationBox>You saw all Pokémons!</InformationBox>\r\n            )}\r\n          </InfiniteScroll>\r\n        ) : listType === \"favourites\" ? (\r\n          <InformationBox>\r\n            {searchValue.length\r\n              ? \"No pokémons found at your favourites!\"\r\n              : \"You have no favourite pokémons!\"}\r\n          </InformationBox>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {searchValue.length && listType === \"all\" ? (\r\n          <InformationBox>\r\n            <LoadMore\r\n              loadedCount={this.context.loadedPokemons.length}\r\n              totalCount={this.context.totalPokemons}\r\n              loadMore={this.loadMorePokemonsToCache}\r\n              isLoading={this.state.infiniteScrollLoading}\r\n            />\r\n          </InformationBox>\r\n        ) : listType === \"favourites\" &&\r\n          favouritePokemons.length &&\r\n          !searchValue.length ? (\r\n          <InformationBox id=\"favouriteDetails\">\r\n            <FavouriteDetails />\r\n          </InformationBox>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import AppContext from \"../../context/AppContext\";\r\nimport { Component } from \"react\";\r\n\r\nclass ContextProvider extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loadedPokemons: [],\r\n      loadedPokemonData: {},\r\n      favouritePokemons: [],\r\n      loadedPageNum: 0,\r\n      totalPokemons: 0,\r\n      addLoadedPokemons: this.addLoadedPokemons,\r\n      increasePageNum: this.increasePageNum,\r\n      addToLoadedPokemonData: this.addToLoadedPokemonData,\r\n      toggleFavourites: this.toggleFavourites,\r\n      removeFavourites: this.removeFavourites,\r\n      setTotalPokemonCount: this.setTotalPokemonCount,\r\n      getPokemonType: this.getPokemonType\r\n    };\r\n  }\r\n\r\n  setTotalPokemonCount = (count) => {\r\n    this.setState({ totalPokemons: count });\r\n  };\r\n\r\n  addLoadedPokemons = (pokemons, callback) => {\r\n    this.setState(\r\n      (prevState) => ({\r\n        loadedPokemons: prevState.loadedPokemons.concat(pokemons),\r\n        loadedPageNum: prevState.loadedPageNum + 1\r\n      }),\r\n      () => {\r\n        if (!callback) return;\r\n        callback();\r\n      }\r\n    );\r\n  };\r\n\r\n  addToLoadedPokemonData = (pokemonName, pokemonData) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        loadedPokemonData: Object.assign({}, prevState.loadedPokemonData, {\r\n          [pokemonName]: pokemonData\r\n        })\r\n      };\r\n    });\r\n  };\r\n\r\n  getPokemonType = (pokemonName) => {\r\n    const pokemon = this.state.loadedPokemonData[pokemonName];\r\n    if (pokemon) {\r\n      return pokemon.types[0].type.name;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  toggleFavourites = (pokemonName) => {\r\n    const favourites = this.state.favouritePokemons;\r\n    const index = favourites.indexOf(pokemonName);\r\n    if (index > -1) {\r\n      this.setState((prevState) => {\r\n        const cloneFavourites = [...prevState.favouritePokemons];\r\n        cloneFavourites.splice(index, 1);\r\n        return {\r\n          favouritePokemons: cloneFavourites\r\n        };\r\n      });\r\n    } else {\r\n      this.setState((prevState) => ({\r\n        favouritePokemons: prevState.favouritePokemons.concat(pokemonName)\r\n      }));\r\n    }\r\n  };\r\n\r\n  removeFavourites = () => {\r\n    this.setState({ favouritePokemons: [] });\r\n  };\r\n\r\n  increasePageNum = () => {\r\n    this.setState((prevState) => ({\r\n      loadedPageNum: prevState.loadedPageNum + 1\r\n    }));\r\n  };\r\n  render() {\r\n    return (\r\n      <AppContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </AppContext.Provider>\r\n    );\r\n  }\r\n}\r\nexport default ContextProvider;\r\n","import { Component } from \"react\";\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBoundary;\r\n","import ReactDOM from \"react-dom\";\n\nimport App from \"./containers/App\";\nimport ContextProvider from \"./containers/ContextProvider\";\nimport ErrorBoundary from \"./containers/ErrorBoundary\";\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <ErrorBoundary>\n    <ContextProvider>\n      <App />\n    </ContextProvider>\n  </ErrorBoundary>,\n  rootElement\n);\n"],"sourceRoot":""}